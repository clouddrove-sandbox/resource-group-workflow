name: Security Scan

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      directory:
        required: true
        type: string
        default: '.'
      continue_on_error:
        required: true
        type: string
        default: 'true'
      var_file:
        required: false
        type: string

jobs:
  scan:
    permissions:
      contents: read
      security-events: write
      actions: read
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Cache Checkov
        uses: actions/cache@v3
        with:
          path: ~/.checkov
          key: ${{ runner.os }}-checkov-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-checkov-

      - name: Run Checkov scan
        id: checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ inputs.directory }}
          output_format: cli,sarif
          soft_fail: ${{ inputs.continue_on_error }}
          download_external_modules: false
          output_file_path: console,checkov-results.sarif

      - name: Process Checkov Output for PR Comment
        id: process_checkov
        if: github.event_name == 'pull_request'
        run: |
          # Extract summary from Checkov results
          SUMMARY=$(grep -A 1 "terraform scan results:" checkov-results.sarif || echo "No summary found")
          
          # Extract failed checks with context
          FAILED_CHECKS=$(grep -A 10 "FAILED" checkov-results.sarif | grep -v "PASSED" || echo "No failed checks found")
          
          # Count checks
          PASSED_COUNT=$(echo "$SUMMARY" | grep -o "Passed checks: [0-9]*" | grep -o "[0-9]*" || echo "0")
          FAILED_COUNT=$(echo "$SUMMARY" | grep -o "Failed checks: [0-9]*" | grep -o "[0-9]*" || echo "0")
          SKIPPED_COUNT=$(echo "$SUMMARY" | grep -o "Skipped checks: [0-9]*" | grep -o "[0-9]*" || echo "0")
          
          # Create multiline output
          echo "failed_checks<<EOF" >> $GITHUB_OUTPUT
          echo "$FAILED_CHECKS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "passed_count=$PASSED_COUNT" >> $GITHUB_OUTPUT
          echo "failed_count=$FAILED_COUNT" >> $GITHUB_OUTPUT
          echo "skipped_count=$SKIPPED_COUNT" >> $GITHUB_OUTPUT
          
          # Create a summary for the PR comment
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Checkov SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: checkov-results.sarif
          category: checkov

      - name: Upload Trivy SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: trivy-results.sarif
          category: trivy

      - name: Comment PR with Security Scan Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const passedCount = '${{ steps.process_checkov.outputs.passed_count }}';
            const failedCount = '${{ steps.process_checkov.outputs.failed_count }}';
            const skippedCount = '${{ steps.process_checkov.outputs.skipped_count }}';
            const failedChecks = `${{ steps.process_checkov.outputs.failed_checks }}`;
            const summary = `${{ steps.process_checkov.outputs.summary }}`;
            
            let status = '✅ All security checks passed!';
            let details = '';
            
            if (parseInt(failedCount) > 0) {
              status = '❌ Security checks failed';
              details = `\n\n### Failed Checks:\n\`\`\`\n${failedChecks}\n\`\`\`\n\nPlease review and fix these security issues before merging.`;
            }
            
            const comment = `## Terraform Security Scan Results
            
            ${status}
            
            **Summary:**
            - Passed checks: ${passedCount}
            - Failed checks: ${failedCount}
            - Skipped checks: ${skippedCount}
            ${details}
            
            _Security scan results are also available in the Security tab._
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
