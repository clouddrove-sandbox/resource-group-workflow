name: 'Checkov Terraform Security Scan'

on:
  pull_request:
    branches: [ "*" ]
    paths:
      - '**.tf'

jobs:
  checkov-scan:
    name: 'Checkov Security Scan'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.0'
      
      - name: Run Checkov Scan
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          soft_fail: true
          output_format: cli
          download_external_modules: true
      
      - name: Process Checkov Output
        id: process_output
        if: always()
        run: |
          # Store Checkov output in a variable
          CHECKOV_OUTPUT="${{ steps.checkov.outputs.results }}"
          
          # Extract failed checks with proper context
          FAILED_CHECKS=$(echo "$CHECKOV_OUTPUT" | grep -A 5 "Check.*FAILED" || echo "No failed checks")
          
          # Count checks
          TOTAL_CHECKS=$(echo "$CHECKOV_OUTPUT" | grep -c "Check:" || echo 0)
          FAILED_COUNT=$(echo "$CHECKOV_OUTPUT" | grep -c "Check.*FAILED" || echo 0)
          
          # Ensure variables are treated as integers
          TOTAL_CHECKS=$(($TOTAL_CHECKS + 0))
          FAILED_COUNT=$(($FAILED_COUNT + 0))
          PASSED_COUNT=$(($TOTAL_CHECKS - $FAILED_COUNT))
          
          # Create multiline output
          echo "failed_checks<<EOF" >> $GITHUB_OUTPUT
          echo "$FAILED_CHECKS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "total_checks=$TOTAL_CHECKS" >> $GITHUB_OUTPUT
          echo "failed_count=$FAILED_COUNT" >> $GITHUB_OUTPUT
          echo "passed_count=$PASSED_COUNT" >> $GITHUB_OUTPUT
      
      - name: Comment PR with Checkov Results
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const totalChecks = ${{ steps.process_output.outputs.total_checks || 0 }};
            const failedCount = ${{ steps.process_output.outputs.failed_count || 0 }};
            const passedCount = ${{ steps.process_output.outputs.passed_count || 0 }};
            const failedChecks = `${{ steps.process_output.outputs.failed_checks || '' }}`;
            
            let status = '✅ All security checks passed!';
            let details = '';
            
            if (parseInt(failedCount) > 0) {
              status = '❌ Security checks failed';
              details = `\n\n### Failed Checks:\n\`\`\`\n${failedChecks}\n\`\`\`\n\nPlease review and fix these security issues before merging.`;
            }
            
            const comment = `## Checkov Terraform Security Scan Results
            
            ${status}
            
            **Summary:**
            - Total checks: ${totalChecks}
            - Passed: ${passedCount}
            - Failed: ${failedCount}
            ${details}
            
            [Checkov Documentation](https://www.checkov.io/5.Policy%20Index/terraform.html)
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
