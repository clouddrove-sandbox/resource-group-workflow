name: Checkov Security Scan with Debug

on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
        description: 'Directory to scan (relative to repository root)'
      continue_on_error:
        required: true
        type: string
        default: 'true'
        description: 'Whether to continue on error (true/false)'
      var_file:
        required: false
        type: string
        description: 'Path to Terraform variable file'

# Proper permissions following principle of least privilege
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Checkov Directly
        run: |
          python -m pip install --upgrade pip
          pip install checkov
          checkov --version

      - name: Debug Checkov Parameters
        run: |
          echo "Directory to scan: ${{ inputs.directory }}"
          echo "Continue on error: ${{ inputs.continue_on_error }}"
          echo "Var file: ${{ inputs.var_file || 'Not provided' }}"
          echo "Download external modules is explicitly set to FALSE"

      # Using the Checkov action with both CLI and SARIF output formats
      - name: Checkov Scan
        id: checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ${{ inputs.directory }}
          soft_fail: ${{ inputs.continue_on_error == 'true' }}
          var_file: ${{ inputs.var_file }}
          download_external_modules: false
          skip_check: CKV_TF_1
          output_format: cli,sarif
          output_file_path: console,results.sarif
          log_level: DEBUG

      # Debug step to verify SARIF file existence
      - name: Debug SARIF file
        if: success() || failure()
        run: |
          ls -la
          if [ -f "results.sarif" ]; then
            echo "SARIF file exists"
            head -n 20 results.sarif
          else
            echo "SARIF file does not exist"
            echo "Current directory contents:"
            ls -la
          fi

      # Upload SARIF file to GitHub Security tab
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: results.sarif
          category: checkov
